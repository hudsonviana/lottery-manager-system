generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  firstName    String
  lastName     String?
  email        String   @unique
  password     String
  role         Role     @default(USER)
  refreshToken String?
  games        Game[]
  groups       Group[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([firstName, lastName])
}

model Game {
  id          String     @id @default(uuid())
  gameNumbers Json
  ticketPrice Float?
  result      GameResult @default(PENDING)
  player      User       @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId    String
  draw        Draw       @relation(fields: [drawId], references: [id])
  drawId      String
  group       Group?     @relation(fields: [groupId], references: [id])
  groupId     String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Draw {
  id            String     @id @default(uuid())
  lotteryType   Lottery    @default(MEGA_SENA)
  contestNumber Int        @unique
  drawDate      DateTime
  status        DrawStatus @default(PENDING)
  drawnNumbers  Json?      @default("[]")
  prize         Json?      @default("[]")
  accumulated   Boolean?   @default(false)
  games         Game[]
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@index([contestNumber])
}

model Group {
  id          String   @id @default(uuid())
  name        String   @unique @db.VarChar(30)
  description String?  @db.VarChar(255)
  isPool      Boolean? @default(false)
  creator     User     @relation(fields: [creatorId], references: [id])
  creatorId   String
  theme       String?  @default("gray")
  games       Game[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name])
}

enum Role {
  USER
  ADMIN
}

enum Lottery {
  MEGA_SENA
  QUINA
  LOTOFACIL
  TIMEMANIA
  LOTOMANIA
}

enum GameResult {
  WON_SIX_NUM
  WON_FIVE_NUM
  WON_FOUR_NUM
  LOST
  PENDING
}

enum DrawStatus {
  DRAWN
  PENDING
}
